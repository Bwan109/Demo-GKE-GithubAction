

name: CI/CD Pipeline Demo (SonarQube Docker, K8S, GKE)

on:
  push:
    branches:
      - master

#env:
#  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
# GKE_CLUSTER: github-actions    # Add your cluster name here.
#  GKE_ZONE:  asia-southeast1  # Add your cluster zone here.
# DEPLOYMENT_NAME: helloworld-gke # Add your deployment name here.  (This follows the deployment.yaml depoyment name)
# IMAGE: static-site

jobs:


  # SonarCloud Scan
  sonarcloud:
          
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
        # Import Sonar Secrets from VAULT
      - name: Import Sonar Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: https://vault-cluster-public-vault-5768c3ac.06fac563.z1.hashicorp.cloud:8200
          method: token
          token: ${{ secrets.VAULT_TOKEN }}
          namespace: admin
          secrets: |
              kv/data/ci SONAR_TOKEN | SONAR_TOKEN
              
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}

  # Setup Build & Deploy to GKE
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Import Google Secrets from VAULT
    - name: Import Google Secrets
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: https://vault-cluster-public-vault-5768c3ac.06fac563.z1.hashicorp.cloud:8200
        method: token
        token: ${{ secrets.VAULT_TOKEN }}
        namespace: admin
        secrets: |
            kv/data/ci GKE_PROJECT | GKE_PROJECT
            kv/data/ci GKE_SA_KEY | GKE_SA_KEY
    
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: github-actions
        location: asia-southeast1
        credentials: ${{ env.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/static-site:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/static-site:$GITHUB_SHA"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f deployment.yaml
        kubectl rollout status deployment/helloworld-gke
        kubectl get services -o wide
